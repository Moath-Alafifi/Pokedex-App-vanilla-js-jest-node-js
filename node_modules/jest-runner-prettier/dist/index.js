import pLimit from "p-limit";
import run from "./run.js";
export default class PrettierTestRunner {
    _globalConfig;
    _context;
    constructor(_globalConfig, _context = {}) {
        this._globalConfig = _globalConfig;
        this._context = _context;
        this._globalConfig = _globalConfig;
        this._context = _context;
    }
    async runTests(tests, _, onStart, onResult, onFailure) {
        const limit = pLimit(this._globalConfig.maxWorkers);
        const promises = tests.map((test) => limit(async () => {
            await onStart(test);
            try {
                const result = await run({ testPath: test.path });
                await onResult(test, result);
            }
            catch (error) {
                await onFailure(test, error);
            }
        }));
        await Promise.all(promises);
    }
}
//# sourceMappingURL=index.js.map